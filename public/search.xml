<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hexo部署没有推送到GitHub中解决办法</title>
      <link href="2021/03/03/Hexo%E9%83%A8%E7%BD%B2%E6%B2%A1%E6%9C%89%E6%8E%A8%E9%80%81%E5%88%B0GitHub%E4%B8%AD%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
      <url>2021/03/03/Hexo%E9%83%A8%E7%BD%B2%E6%B2%A1%E6%9C%89%E6%8E%A8%E9%80%81%E5%88%B0GitHub%E4%B8%AD%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="问题描述">问题描述</h2><p>当我们编写完文章后，使用<code>hexo d</code>部署博客时，没有发生任何错误信息：</p><p><img src="/2021/03/03/Hexo%E9%83%A8%E7%BD%B2%E6%B2%A1%E6%9C%89%E6%8E%A8%E9%80%81%E5%88%B0GitHub%E4%B8%AD%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/image-20210303170857478.png"></p><p>然后我们去GitHub仓库中却发现新的文章并没有提交到Github仓库中</p><a id="more"></a><h2 id="解决办法">解决办法</h2><ol type="1"><li><p>卸载原有的<code>hexo-deployer-git</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-deployer-git</span><br></pre></td></tr></tbody></table></figure></li><li><p>从 master 分支安装<code>hexo-deployer-git</code></p><figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexojs/hexo-deployer-git</span><br></pre></td></tr></tbody></table></figure></li></ol><p>参考文章：<a href="https://www.zhihu.com/question/443396119">https://www.zhihu.com/question/443396119</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SpringBoot+Lettuce监听RedisCluster集群环境下的键值事件</title>
      <link href="2021/03/03/SpringBoot+Lettuce%E7%9B%91%E5%90%ACRedisCluster%E9%9B%86%E7%BE%A4%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E9%94%AE%E5%80%BC%E4%BA%8B%E4%BB%B6/"/>
      <url>2021/03/03/SpringBoot+Lettuce%E7%9B%91%E5%90%ACRedisCluster%E9%9B%86%E7%BE%A4%E7%8E%AF%E5%A2%83%E4%B8%8B%E7%9A%84%E9%94%AE%E5%80%BC%E4%BA%8B%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h2 id="修改redis配置文件">修改Redis配置文件</h2><p><code>redis.conf</code>配置文件修改位置如下：</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 注释掉bind 127.0.0.1</span><br><span class="line">#bind 127.0.0.1</span><br><span class="line"># 设置后台运行</span><br><span class="line">daemonize yes</span><br><span class="line"># 设置外网可访问</span><br><span class="line">protected-mode no</span><br><span class="line"># 设置授权密码</span><br><span class="line">requirepass 123456</span><br><span class="line"># 开启cluster</span><br><span class="line">cluster-enabled yes</span><br><span class="line"># 设置cluster配置文件名称</span><br><span class="line">cluster-config-file nodes.conf</span><br><span class="line"># 设置Cluster节点超时时间</span><br><span class="line">cluster-node-timeout 2000</span><br><span class="line"># 开启Redis AOF持久化</span><br><span class="line">appendonly yes</span><br><span class="line"># 设置AOF持久化文件名</span><br><span class="line">appendfilename appendonly.aof</span><br><span class="line"># 设置DUMP文件名</span><br><span class="line">dbfilename dump.rdb</span><br><span class="line"># 设置Redis日志文件名</span><br><span class="line">logfile redis.log</span><br><span class="line"># 开启缓存的键空间通知事件</span><br><span class="line">notify-keyspace-events EA</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><blockquote><p><strong>注意：</strong>若在单机上部署伪集群，注意修改<code>redis.conf</code>中的<code>port 6378</code>端口号，以及配置中所有文件名称(不重复即可)</p></blockquote><h2 id="配置application.yml">配置<code>application.yml</code></h2><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">spring:</span><br><span class="line">  redis:</span><br><span class="line">    password: 123456</span><br><span class="line">    cluster:</span><br><span class="line">      #获取失败 最大重定向次数</span><br><span class="line">      max-redirects: 3</span><br><span class="line">      nodes: 192.168.0.59:32001,192.168.0.59:32002,192.168.0.59:32003,192.168.0.59:32004,192.168.0.59:32005,192.168.0.59:32006</span><br><span class="line">    lettuce:</span><br><span class="line">      pool:</span><br><span class="line">        #连接池最大连接数(使用负值表示没有限制)</span><br><span class="line">        max-active: 1000</span><br><span class="line">        #连接池中的最大空闲连接</span><br><span class="line">        max-idle: 10</span><br><span class="line">        #连接池中的最小空闲连接</span><br><span class="line">        min-idle: 5</span><br><span class="line">        #连接池最大阻塞等待时间(使用负值表示没有限制)</span><br><span class="line">        max-wait: 3000</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><h2 id="重写redis缓存的默认配置函数">重写Redis缓存的默认配置函数</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nicollcheng.redis.cluster;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.BeanFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.AutoConfigureAfter;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnClass;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.condition.ConditionalOnExpression;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.data.redis.RedisProperties;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.jackson.JacksonAutoConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Bean;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.annotation.Configuration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.MessageListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnection;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisOperations;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.core.RedisTemplate;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.listener.PatternTopic;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.listener.RedisMessageListenerContainer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.GenericJackson2JsonRedisSerializer;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.serializer.StringRedisSerializer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: nicollcheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateTime</span>: 2021-3-3 10:55</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Redis 配置</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@ConditionalOnClass({ LettuceConnection.class, RedisOperations.class, RedisProperties.Lettuce.class, MessageListener.class })</span></span><br><span class="line"><span class="meta">@AutoConfigureAfter({ JacksonAutoConfiguration.class,RedisAutoConfiguration.class })</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisAutoConfiguration</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="meta">@ConditionalOnExpression("!'${spring.redis.host:}'.isEmpty()")</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisStandAloneAutoConfiguration</span> </span>{</span><br><span class="line">        <span class="meta">@Bean</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> RedisMessageListenerContainer <span class="title">customizeRedisListenerContainer</span><span class="params">(</span></span></span><br><span class="line"><span class="function"><span class="params">                RedisConnectionFactory redisConnectionFactory,MessageListener messageListener)</span> </span>{</span><br><span class="line">            RedisMessageListenerContainer redisMessageListenerContainer = <span class="keyword">new</span> RedisMessageListenerContainer();</span><br><span class="line">            redisMessageListenerContainer.setConnectionFactory(redisConnectionFactory);</span><br><span class="line">            redisMessageListenerContainer.addMessageListener(messageListener,<span class="keyword">new</span> PatternTopic(<span class="string">"__keyevent@*__:*"</span>));</span><br><span class="line">            <span class="keyword">return</span> redisMessageListenerContainer;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Configuration</span></span><br><span class="line">    <span class="meta">@ConditionalOnExpression("'${spring.redis.host:}'.isEmpty()")</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisClusterAutoConfiguration</span> </span>{</span><br><span class="line">        <span class="meta">@Bean</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> RedisMessageListenerFactory <span class="title">redisMessageListenerFactory</span><span class="params">(BeanFactory beanFactory,</span></span></span><br><span class="line"><span class="function"><span class="params">                                                                       RedisConnectionFactory redisConnectionFactory)</span> </span>{</span><br><span class="line">            RedisMessageListenerFactory beans = <span class="keyword">new</span> RedisMessageListenerFactory();</span><br><span class="line">            beans.setBeanFactory(beanFactory);</span><br><span class="line">            beans.setRedisConnectionFactory(redisConnectionFactory);</span><br><span class="line">            <span class="keyword">return</span> beans;</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">    <span class="meta">@Bean(name = "redisTemplate")</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> RedisTemplate&lt;String, Object&gt; <span class="title">redisTemplate</span><span class="params">(LettuceConnectionFactory connectionFactory)</span> </span>{</span><br><span class="line">        RedisTemplate&lt;String, Object&gt; redisTemplate = <span class="keyword">new</span> RedisTemplate&lt;&gt;();</span><br><span class="line">        <span class="comment">// 设置值（value）的序列化采用 GenericJackson2JsonRedisSerializer。</span></span><br><span class="line">        redisTemplate.setValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">        redisTemplate.setHashValueSerializer(<span class="keyword">new</span> GenericJackson2JsonRedisSerializer());</span><br><span class="line">        <span class="comment">// 设置键（key）的序列化采用 StringRedisSerializer。</span></span><br><span class="line">        redisTemplate.setKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        redisTemplate.setHashKeySerializer(<span class="keyword">new</span> StringRedisSerializer());</span><br><span class="line">        redisTemplate.setConnectionFactory(connectionFactory);</span><br><span class="line">        redisTemplate.afterPropertiesSet();</span><br><span class="line">        <span class="keyword">return</span> redisTemplate;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="创建redis键值监听器">创建Redis键值监听器</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nicollcheng.redis.cluster;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.BeansException;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.BeanFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.BeanFactoryAware;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Value;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.config.BeanDefinition;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.support.BeanDefinitionBuilder;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.support.DefaultListableBeanFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.ApplicationListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.context.event.ContextRefreshedEvent;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.MessageListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisClusterConnection;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisClusterNode;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.RedisStandaloneConfiguration;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.lettuce.LettuceConnectionFactory;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.listener.PatternTopic;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.listener.RedisMessageListenerContainer;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: nicollcheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateTime</span>: 2021-3-3 10:57</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: Redis集群节点键空间监听器工厂</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RedisMessageListenerFactory</span> <span class="keyword">implements</span> <span class="title">BeanFactoryAware</span>, <span class="title">ApplicationListener</span>&lt;<span class="title">ContextRefreshedEvent</span>&gt; </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Value("${spring.redis.password}")</span></span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> DefaultListableBeanFactory beanFactory;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> RedisConnectionFactory redisConnectionFactory;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> MessageListener messageListener;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setBeanFactory</span><span class="params">(BeanFactory beanFactory)</span> <span class="keyword">throws</span> BeansException </span>{</span><br><span class="line">        <span class="keyword">this</span>.beanFactory = (DefaultListableBeanFactory) beanFactory;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setRedisConnectionFactory</span><span class="params">(RedisConnectionFactory redisConnectionFactory)</span> </span>{</span><br><span class="line">        <span class="keyword">this</span>.redisConnectionFactory = redisConnectionFactory;</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onApplicationEvent</span><span class="params">(ContextRefreshedEvent contextRefreshedEvent)</span> </span>{</span><br><span class="line">        RedisClusterConnection redisClusterConnection = redisConnectionFactory.getClusterConnection();</span><br><span class="line">        <span class="keyword">if</span> (redisClusterConnection != <span class="keyword">null</span>) {</span><br><span class="line">            Iterable&lt;RedisClusterNode&gt; nodes = redisClusterConnection.clusterGetNodes();</span><br><span class="line">            <span class="keyword">for</span> (RedisClusterNode node : nodes) {</span><br><span class="line">                <span class="keyword">if</span> (node.isMaster()) {</span><br><span class="line">                    log.info(<span class="string">"获取到redis的master节点为[{}]"</span>,node.toString());</span><br><span class="line">                    String containerBeanName = <span class="string">"messageContainer"</span> + node.hashCode();</span><br><span class="line">                    <span class="keyword">if</span> (beanFactory.containsBean(containerBeanName)) {</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    }</span><br><span class="line">                    RedisStandaloneConfiguration redisStandaloneConfiguration = <span class="keyword">new</span> RedisStandaloneConfiguration(node.getHost(), node.getPort() );</span><br><span class="line">                    redisStandaloneConfiguration.setPassword(password);</span><br><span class="line">                    LettuceConnectionFactory factory = <span class="keyword">new</span> LettuceConnectionFactory(redisStandaloneConfiguration);</span><br><span class="line">                    factory.afterPropertiesSet();</span><br><span class="line">                    BeanDefinitionBuilder containerBeanDefinitionBuilder = BeanDefinitionBuilder</span><br><span class="line">                            .genericBeanDefinition(RedisMessageListenerContainer.class);</span><br><span class="line">                    containerBeanDefinitionBuilder.addPropertyValue(<span class="string">"connectionFactory"</span>, factory);</span><br><span class="line">                    containerBeanDefinitionBuilder.setScope(BeanDefinition.SCOPE_SINGLETON);</span><br><span class="line">                    containerBeanDefinitionBuilder.setLazyInit(<span class="keyword">false</span>);</span><br><span class="line">                    beanFactory.registerBeanDefinition(containerBeanName,</span><br><span class="line">                            containerBeanDefinitionBuilder.getRawBeanDefinition());</span><br><span class="line"></span><br><span class="line">                    RedisMessageListenerContainer container = beanFactory.getBean(containerBeanName,</span><br><span class="line">                            RedisMessageListenerContainer.class);</span><br><span class="line">                    String listenerBeanName = <span class="string">"messageListener"</span> + node.hashCode();</span><br><span class="line">                    <span class="keyword">if</span> (beanFactory.containsBean(listenerBeanName)) {</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    }</span><br><span class="line">                    container.addMessageListener(messageListener, <span class="keyword">new</span> PatternTopic(<span class="string">"__keyevent@*__:*"</span>));</span><br><span class="line">                    container.afterPropertiesSet();</span><br><span class="line">                    container.start();</span><br><span class="line">                }</span><br><span class="line">            }</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h2 id="监听事件触发监听器">监听事件触发监听器</h2><figure class="highlight java"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> cn.nicollcheng.redis.cluster;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> lombok.extern.slf4j.Slf4j;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.Message;</span><br><span class="line"><span class="keyword">import</span> org.springframework.data.redis.connection.MessageListener;</span><br><span class="line"><span class="keyword">import</span> org.springframework.stereotype.Component;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Author</span>: nicollcheng</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@CreateTime</span>: 2021-3-3 11:01</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 监听事件触发监听器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="meta">@Slf4j</span></span><br><span class="line"><span class="meta">@Component</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KeyExpiredEventMessageListener</span> <span class="keyword">implements</span> <span class="title">MessageListener</span> </span>{</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onMessage</span><span class="params">(Message message, <span class="keyword">byte</span>[] pattern)</span> </span>{</span><br><span class="line">        String action = <span class="keyword">new</span> String(message.getChannel());</span><br><span class="line">        action = action.substring(action.indexOf(<span class="string">":"</span>)+<span class="number">1</span>);</span><br><span class="line">        String key = <span class="keyword">new</span> String(message.getBody());</span><br><span class="line">        log.info(<span class="string">"监听到的键：{},监听到的事件：{}"</span>,key, action);</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p>参考文章：<a href="https://www.cnblogs.com/xfearless/p/11393438.html">https://www.cnblogs.com/xfearless/p/11393438.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Redis Cluster </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
            <tag> Redis Cluster </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL主从搭建</title>
      <link href="2021/02/08/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/"/>
      <url>2021/02/08/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="mysql主从同步搭建">MySQL主从同步搭建</h1><h2 id="环境">环境</h2><ul><li>docker</li><li>docker-compose</li><li>mysql:5.7.28</li></ul><h2 id="主库搭建">主库搭建</h2><ol type="1"><li><p>创建并进入MySQL文件夹</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/<span class="built_in">local</span>/mysql-master</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql-master</span><br></pre></td></tr></tbody></table></figure><a id="more"></a></li><li><p>编写<code>docker-compose.yaml</code></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7.28</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql-master</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3307</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">--character-set-server=utf8</span></span><br><span class="line">      <span class="string">--collation-server=utf8_general_ci</span></span><br><span class="line">      <span class="string">--explicit_defaults_for_timestamp=true</span></span><br><span class="line">      <span class="string">--lower_case_table_names=1</span></span><br><span class="line">      <span class="string">--max_allowed_packet=128M</span></span><br><span class="line">      <span class="string">--sql-mode="STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf/my.cnf:/etc/mysql/my.cnf</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建挂载的数据卷</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir data</span><br><span class="line">mkdir conf</span><br></pre></td></tr></tbody></table></figure></li><li><p>编写MySQL配置文件<code>my.cnf</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log-bin=mysql-bin</span><br><span class="line">server_id=41</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动并进入<code>mysql-master</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql-master bash</span><br><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></tbody></table></figure></li><li><p>查看主节点状态信息</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show master status;</span><br><span class="line">+---------------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| File                      | Position | Binlog_Do_DB | Binlog_Ignore_DB | Executed_Gtid_Set |</span><br><span class="line">+---------------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">| replicas-mysql-bin.000001 |     1237 |              | mysql            |                   |</span><br><span class="line">+---------------------------+----------+--------------+------------------+-------------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></tbody></table></figure><blockquote><p>注意记录此时主节点状态信息中的<code>File</code>字段和<code>Position</code>字段对应数据</p></blockquote></li></ol><h2 id="从库搭建">从库搭建</h2><ol type="1"><li><p>创建并进入MySQL文件夹</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /usr/<span class="built_in">local</span>/mysql-master</span><br><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/mysql-master</span><br></pre></td></tr></tbody></table></figure></li><li><p>编写<code>docker-compose.yaml</code></p><figure class="highlight yaml"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">version:</span> <span class="string">'3.1'</span></span><br><span class="line"><span class="attr">services:</span></span><br><span class="line">  <span class="attr">mysql:</span></span><br><span class="line">    <span class="attr">restart:</span> <span class="string">always</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">mysql:5.7.28</span></span><br><span class="line">    <span class="attr">container_name:</span> <span class="string">mysql-salve</span></span><br><span class="line">    <span class="attr">ports:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="number">3306</span><span class="string">:3306</span></span><br><span class="line">    <span class="attr">environment:</span></span><br><span class="line">      <span class="attr">TZ:</span> <span class="string">Asia/Shanghai</span></span><br><span class="line">      <span class="attr">MYSQL_ROOT_PASSWORD:</span> <span class="number">123456</span></span><br><span class="line">    <span class="attr">command:</span></span><br><span class="line">      <span class="string">--character-set-server=utf8</span></span><br><span class="line">      <span class="string">--collation-server=utf8_general_ci</span></span><br><span class="line">      <span class="string">--explicit_defaults_for_timestamp=true</span></span><br><span class="line">      <span class="string">--lower_case_table_names=1</span></span><br><span class="line">      <span class="string">--max_allowed_packet=128M</span></span><br><span class="line">      <span class="string">--sql-mode="STRICT_TRANS_TABLES,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION,NO_ZERO_DATE,NO_ZERO_IN_DATE,ERROR_FOR_DIVISION_BY_ZERO"</span></span><br><span class="line">    <span class="attr">volumes:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./data:/var/lib/mysql</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">./conf/my.cnf:/etc/mysql/my.cnf</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>创建挂载的数据卷</p><p><strong>注意：</strong>此时复制<strong>主节点</strong>的<code>data</code>目录到当前目录中</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir conf</span><br></pre></td></tr></tbody></table></figure></li><li><p>编写MySQL配置文件<code>my.cnf</code></p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[mysqld]</span><br><span class="line">server_id=59</span><br><span class="line">slave-parallel-type=LOGICAL_CLOCK</span><br><span class="line">slave-parallel-workers=16</span><br><span class="line">master_info_repository=TABLE</span><br><span class="line">relay_log_info_repository=TABLE</span><br><span class="line">relay_log_recovery=ON</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动并进入<code>mysql-slave</code></p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it mysql-slave bash</span><br><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></tbody></table></figure></li><li><p>配置从节点对应主节点信息</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">stop slave;</span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">    MASTER_HOST=<span class="string">'192.168.0.59'</span>,</span><br><span class="line">    MASTER_PORT=3307,</span><br><span class="line">    MASTER_USER=<span class="string">'root'</span>,</span><br><span class="line">    MASTER_PASSWORD=<span class="string">'123456'</span>,</span><br><span class="line">    MASTER_LOG_FILE=<span class="string">'replicas-mysql-bin.000001'</span>,</span><br><span class="line">    MASTER_LOG_POS=1237;</span><br></pre></td></tr></tbody></table></figure><blockquote><p>MASTER_HOST：主库IP MASTER_PORT：主库端口 MASTER_USER：主库用户名 MASTER_PASSWORD：主库密码 MASTER_LOG_FILE：主库节点信息中<code>File</code>字段对应数据 MASTER_LOG_POS：主库节点信息中<code>Position</code>字段对应数据</p></blockquote></li><li><p>启动复制线程</p><figure class="highlight bash"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">start slave;</span><br></pre></td></tr></tbody></table></figure></li><li><p>查看从节点状态信息</p><figure><img src="/2021/02/08/MySQL%E4%B8%BB%E4%BB%8E%E6%90%AD%E5%BB%BA/从库信息-1612762949148.png" alt="从库信息"><figcaption aria-hidden="true">从库信息</figcaption></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vagrant+virtual-box搭建虚拟机</title>
      <link href="2021/02/08/vagrant-virtual-box%E6%90%AD%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
      <url>2021/02/08/vagrant-virtual-box%E6%90%AD%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA/</url>
      
        <content type="html"><![CDATA[<h2 id="环境准备">环境准备</h2><h3 id="下载安装vagrant">下载安装Vagrant</h3><p>下载地址：</p><ul><li><a href="https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.msi">Window</a></li><li><a href="https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.deb">Debian</a></li><li><a href="https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.rpm">Centos</a></li><li><a href="https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_linux_amd64.zip">Linux</a></li><li><a href="https://releases.hashicorp.com/vagrant/2.2.7/vagrant_2.2.7_x86_64.dmg">macOS</a></li></ul><h3 id="下载安装virtual-box">下载安装Virtual Box</h3><p>下载地址：</p><ul><li><a href="https://download.virtualbox.org/virtualbox/6.1.4/VirtualBox-6.1.4-136177-Win.exe">Window</a></li><li><a href="https://download.virtualbox.org/virtualbox/6.1.4/VirtualBox-6.1.4-136177-OSX.dmg">macOS</a></li></ul><a id="more"></a><h2 id="安装centos7">安装CentOS7</h2><h3 id="下载centos7的box镜像">下载CentOS7的<code>box</code>镜像</h3><p>下载地址：https://app.vagrantup.com/centos/boxes/7/versions/1905.1/providers/virtualbox.box</p><h4 id="如何在vagrant官网下载box">如何在Vagrant官网下载Box</h4><p>以下载CentOS/7为例</p><ul><li><p>进入<a href="https://www.vagrantup.com/">Vagrant</a>官网</p></li><li><p>点击<a href="https://app.vagrantup.com/boxes/search">Find Boxes</a> 输入<code>centos</code>进行搜索，选择第一个</p><p><img src="/2021/02/08/vagrant-virtual-box%E6%90%AD%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA/image-20210208132347059.png"></p></li><li><p>由于这里使用<code>virtualbox</code>，所以我们要找一个提供virtualbox支持的版本，如<code>1905.1</code></p><p><img src="/2021/02/08/vagrant-virtual-box%E6%90%AD%E5%BB%BA%E8%99%9A%E6%8B%9F%E6%9C%BA/image-20210208132606019.png"></p></li><li><p>点击该版本进入详情页：https://app.vagrantup.com/centos/boxes/7/versions/1905.1</p><blockquote><p>下载链接 = 产品版本链接 + 供应商英文意思 + 要下载的供应商名称（如virtualbox）+.box</p><p>如上：生成的下载链接为：https://app.vagrantup.com/centos/boxes/7/versions/1905.1/providers/virtualbox.box</p><p>参考链接：https://blog.csdn.net/shadow_zed/article/details/95032965</p></blockquote></li></ul><h3 id="安装">安装</h3><ul><li><p>创建CentOS文件夹，并进入其中</p></li><li><p>在此目录下打开cmd</p></li><li><p>进行安装CentOS</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 添加镜像并起名centos/7</span><br><span class="line">vagrant box add centos/7 CentOS-7-x86_64-Vagrant-1905_01.VirtualBox.box</span><br><span class="line"># 初始化CentOS配置文件，生成Vagrantfile文件，指定使用centos/7镜像</span><br><span class="line">vagrant init centos/7</span><br></pre></td></tr></tbody></table></figure></li><li><p>配置CentOS系统信息</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vagrantfile</span><br></pre></td></tr></tbody></table></figure><p>示例模板</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line"># -*- mode: ruby -*-</span><br><span class="line"># vi: set ft=ruby :</span><br><span class="line"></span><br><span class="line"># All Vagrant configuration is done below. The "2" in Vagrant.configure</span><br><span class="line"># configures the configuration version (we support older styles for</span><br><span class="line"># backwards compatibility). Please don't change it unless you know what</span><br><span class="line"># you're doing.</span><br><span class="line">Vagrant.configure("2") do |config|</span><br><span class="line">  # The most common configuration options are documented and commented below.</span><br><span class="line">  # For a complete reference, please see the online documentation at</span><br><span class="line">  # https://docs.vagrantup.com.</span><br><span class="line"></span><br><span class="line">  # Every Vagrant development environment requires a box. You can search for</span><br><span class="line">  # boxes at https://vagrantcloud.com/search.</span><br><span class="line">  config.vm.hostname = "mildchary"</span><br><span class="line">  config.vm.box = "centos/7"</span><br><span class="line"></span><br><span class="line">  # Disable automatic box update checking. If you disable this, then</span><br><span class="line">  # boxes will only be checked for updates when the user runs</span><br><span class="line">  # `vagrant box outdated`. This is not recommended.</span><br><span class="line">  # config.vm.box_check_update = false</span><br><span class="line"></span><br><span class="line">  # Create a forwarded port mapping which allows access to a specific port</span><br><span class="line">  # within the machine from a port on the host machine. In the example below,</span><br><span class="line">  # accessing "localhost:8080" will access port 80 on the guest machine.</span><br><span class="line">  # NOTE: This will enable public access to the opened port</span><br><span class="line">  # config.vm.network "forwarded_port", guest: 80, host: 8080</span><br><span class="line"></span><br><span class="line">  # Create a forwarded port mapping which allows access to a specific port</span><br><span class="line">  # within the machine from a port on the host machine and only allow access</span><br><span class="line">  # via 127.0.0.1 to disable public access</span><br><span class="line">  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"</span><br><span class="line"></span><br><span class="line">  # Create a private network, which allows host-only access to the machine</span><br><span class="line">  # using a specific IP.</span><br><span class="line">  # 仅主机模式</span><br><span class="line">  config.vm.network "private_network", ip: "192.168.33.5"</span><br><span class="line"></span><br><span class="line">  # Create a public network, which generally matched to bridged network.</span><br><span class="line">  # Bridged networks make the machine appear as another physical device on</span><br><span class="line">  # your network.</span><br><span class="line">  # 桥接模式</span><br><span class="line">  # config.vm.network "public_network", ip: "192.168.31.190"</span><br><span class="line">  #config.vm.network "public_network"</span><br><span class="line"></span><br><span class="line">  # Share an additional folder to the guest VM. The first argument is</span><br><span class="line">  # the path on the host to the actual folder. The second argument is</span><br><span class="line">  # the path on the guest to mount the folder. And the optional third</span><br><span class="line">  # argument is a set of non-required options.</span><br><span class="line">  # config.vm.synced_folder "../data", "/vagrant_data"</span><br><span class="line"></span><br><span class="line">  # Provider-specific configuration so you can fine-tune various</span><br><span class="line">  # backing providers for Vagrant. These expose provider-specific options.</span><br><span class="line">  # Example for VirtualBox:</span><br><span class="line">  #</span><br><span class="line">  # config.vm.provider "virtualbox" do |vb|</span><br><span class="line">  #   # Display the VirtualBox GUI when booting the machine</span><br><span class="line">  #   vb.gui = true</span><br><span class="line">  #</span><br><span class="line">  #   # Customize the amount of memory on the VM:</span><br><span class="line">  #   vb.memory = "1024"</span><br><span class="line">  # end</span><br><span class="line">  #</span><br><span class="line">  # View the documentation for the provider you are using for more</span><br><span class="line">  # information on available options.</span><br><span class="line">  config.vm.provider "virtualbox" do |vb|</span><br><span class="line">    #指定vm-name，也就是virtualbox管理控制台中的虚机名称</span><br><span class="line">    vb.name = "CentOS"</span><br><span class="line">    # vagrant up启动时，是否自动打开virtual box的窗口，缺省为false</span><br><span class="line">    vb.gui = false # true</span><br><span class="line">    #指定vm内存，单位为MB</span><br><span class="line">    vb.memory = "2048"</span><br><span class="line">    #设置CPU个数</span><br><span class="line">    vb.cpus = 1</span><br><span class="line">  end</span><br><span class="line">  # Enable provisioning with a shell script. Additional provisioners such as</span><br><span class="line">  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the</span><br><span class="line">  # documentation for more information about their specific syntax and use.</span><br><span class="line">  # config.vm.provision "shell", inline: &lt;&lt;-SHELL</span><br><span class="line">  #   apt-get update</span><br><span class="line">  #   apt-get install -y apache2</span><br><span class="line">  # SHELL</span><br><span class="line">end</span><br></pre></td></tr></tbody></table></figure></li><li><p>启动CentOS</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 于Vagrantfile文件所在目录打开cmd</span><br><span class="line">vagrant up</span><br><span class="line"># ssh 连接 CentOS</span><br><span class="line">vagrant ssh</span><br></pre></td></tr></tbody></table></figure><h3 id="配置sshd使用xshell连接">配置sshd使用Xshell连接</h3></li><li><p>于Vagrantfile文件所在目录打开cmd</p></li><li><p>使用vagrant ssh连接CentOS</p></li><li><p>配置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/ssh/sshd_config</span><br></pre></td></tr></tbody></table></figure><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/ssh/sshd_config</span><br><span class="line"># 修改PasswordAuthentication yes</span><br></pre></td></tr></tbody></table></figure></li><li><p>重启sshd</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></tbody></table></figure></li><li><p>设置root密码</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></tbody></table></figure><h3 id="打包已有系统为box镜像">打包已有系统为box镜像</h3></li><li><p>退出虚拟机</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant halt</span><br></pre></td></tr></tbody></table></figure></li><li><p>打包</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant package --output my-centos7.box</span><br></pre></td></tr></tbody></table></figure></li><li><p>将my-centos7.box添加到其他的vagrant环境中</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant box add my-centos my-centos7.box</span><br></pre></td></tr></tbody></table></figure></li><li><p>初始化系统配置</p><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vagrant init my-centos</span><br></pre></td></tr></tbody></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> 虚拟机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> vagrant </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker系列安装</title>
      <link href="2021/02/08/Docker%E7%B3%BB%E5%88%97%E5%AE%89%E8%A3%85/"/>
      <url>2021/02/08/Docker%E7%B3%BB%E5%88%97%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h3 id="卸载之前的docker">卸载之前的docker</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                  docker-client \</span><br><span class="line">                  docker-client-latest \</span><br><span class="line">                  docker-common \</span><br><span class="line">                  docker-latest \</span><br><span class="line">                  docker-latest-logrotate \</span><br><span class="line">                  docker-logrotate \</span><br><span class="line">                  docker-engine</span><br></pre></td></tr></tbody></table></figure><h3 id="安装必要依赖">安装必要依赖</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils \</span><br><span class="line">    device-mapper-persistent-data \</span><br><span class="line">    lvm2</span><br></pre></td></tr></tbody></table></figure><a id="more"></a><h3 id="设置docker仓库">设置Docker仓库</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo mkdir -p /etc/docker</span><br><span class="line">vi /etc/docker/daemon.json</span><br><span class="line"># 添加如下信息</span><br><span class="line">{</span><br><span class="line">  "registry-mirrors": ["https://1031vuk0.mirror.aliyuncs.com"]</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><h3 id="安装docker">安装Docker</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y docker-ce docker-ce-cli containerd.io</span><br></pre></td></tr></tbody></table></figure><h3 id="启动docker">启动Docker</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></tbody></table></figure><h3 id="设置开机自启">设置开机自启</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br></pre></td></tr></tbody></table></figure><h3 id="扩展">扩展</h3><p><a href="https://wiki.deepin.org/wiki/Docker">Deepin安装docker</a></p><h2 id="docker-compose安装">Docker Compose安装</h2><h3 id="下载安装包">下载<a href="https://github.com/docker/compose/releases/latest">安装包</a></h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https://github.com/docker/compose/releases/download/1.25.4/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br></pre></td></tr></tbody></table></figure><h3 id="给予执行权限">给予执行权限</h3><figure class="highlight plain"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></tbody></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
